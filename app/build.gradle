apply plugin: 'com.android.application'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

android {
    compileSdk 33
    //buildTools '33.0.2'
    namespace 'me.samael.android.calllocation'

    defaultConfig {
        applicationId "me.samael.android.calllocation"
        minSdk 32
        targetSdkVersion 33

        versionCode 1
        versionName "1.0"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    lintOptions {
        abortOnError false
        htmlReport true
    }
    signingConfigs {
        release {
            storeFile file(System.getProperty("user.home") + "\\releasekey.keystore")
            storePassword ''
            keyAlias "releasekey"
            keyPassword ''
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            minifyEnabled false
            debuggable = true
        }
    }
}

dependencies {
    // implementation fileTree(dir: 'libs', include: '*.jar')
    //implementation 'com.android.support:support-v4:18.+'
    //implementation 'com.android.support:appcompat-v7:18.+'
    implementation 'androidx.core:core:1.12.0'

    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
}

//import groovy.swing.SwingBuilder

//gradle.taskGraph.whenReady { taskGraph ->
//    if (taskGraph.hasTask(':app:assembleRelease')) {
//        def storePass = ''
//        def keyPass = ''
//        if (System.console() == null) {
//            new SwingBuilder().edt {
//                dialog(modal: true, title: 'Enter password', alwaysOnTop: true, resizable: false, locationRelativeTo: null, pack: true, show: true) {
//                    vbox { // Put everything below each other
//                        label(text: "Please enter store passphrase:")
//                        def input1 = passwordField()
//                        label(text: "Please enter key passphrase:")
//                        def input2 = passwordField()
//                        button(defaultButton: true, text: 'OK', actionPerformed: {
//                            storePass = input1.password;
//                            keyPass = input2.password;
//                            dispose();
//                        })
//                    }
//                }
//            }
//        } else {
//            storePass = System.console().readPassword("\nPlease enter store passphrase: ")
//            keyPass = System.console().readPassword("\nPlease enter key passphrase: ")
//        }
//
//        if (storePass.size() <= 0 || keyPass.size() <= 0) {
//            throw new InvalidUserDataException("You must enter the passwords to proceed.")
//        }
//
//        storePass = new String(storePass)
//        keyPass = new String(keyPass)
//
//        android.signingConfigs.release.storePassword = storePass
//        android.signingConfigs.release.keyPassword = keyPass
//    }
//}
